taille : 6 | nb robot : 3
Init + phiUltimate
taille_anneau =  6
nb_robots =  3
taille_boucle_max =  19600
boucle pour k = 1

Test pour taille_boucle =  5
Construction de la boucle de taille :  1  | pour une taille totale de :  5
1er Post : cp départ :  [kp00, kp01, kp02]  | cp arrivé :  [bpp00, bpp01, bpp02] 

Dernier Post : cp départ :  [bpp00, bpp01, bpp02]  | cp arrivé :  [p_equiv50, p_equiv51, p_equiv52] 

Construction de la boucle de taille :  2  | pour une taille totale de :  5
1er Post : cp départ :  [kp00, kp01, kp02]  | cp arrivé :  [bpp00, bpp01, bpp02] 

Boucle Post :  0  cp départ :  [bpp00, bpp01, bpp02]  | cp arrivé :  [bpp10, bpp11, bpp12] 

Dernier Post : cp départ :  [bpp10, bpp11, bpp12]  | cp arrivé :  [p_equiv50, p_equiv51, p_equiv52] 

Construction de la boucle de taille :  3  | pour une taille totale de :  5
1er Post : cp départ :  [kp00, kp01, kp02]  | cp arrivé :  [bpp00, bpp01, bpp02] 

Boucle Post :  0  cp départ :  [bpp00, bpp01, bpp02]  | cp arrivé :  [bpp10, bpp11, bpp12] 

Boucle Post :  1  cp départ :  [bpp10, bpp11, bpp12]  | cp arrivé :  [bpp20, bpp21, bpp22] 

Dernier Post : cp départ :  [bpp20, bpp21, bpp22]  | cp arrivé :  [p_equiv50, p_equiv51, p_equiv52] 

Construction de la boucle de taille :  4  | pour une taille totale de :  5
1er Post : cp départ :  [kp00, kp01, kp02]  | cp arrivé :  [bpp00, bpp01, bpp02] 

Boucle Post :  0  cp départ :  [bpp00, bpp01, bpp02]  | cp arrivé :  [bpp10, bpp11, bpp12] 

Boucle Post :  1  cp départ :  [bpp10, bpp11, bpp12]  | cp arrivé :  [bpp20, bpp21, bpp22] 

Boucle Post :  2  cp départ :  [bpp20, bpp21, bpp22]  | cp arrivé :  [bpp30, bpp31, bpp32] 

Dernier Post : cp départ :  [bpp30, bpp31, bpp32]  | cp arrivé :  [p_equiv50, p_equiv51, p_equiv52] 

Construction de la boucle de taille :  5  | pour une taille totale de :  5
1er Post : cp départ :  [kp00, kp01, kp02]  | cp arrivé :  [bpp00, bpp01, bpp02] 

Boucle Post :  0  cp départ :  [bpp00, bpp01, bpp02]  | cp arrivé :  [bpp10, bpp11, bpp12] 

Boucle Post :  1  cp départ :  [bpp10, bpp11, bpp12]  | cp arrivé :  [bpp20, bpp21, bpp22] 

Boucle Post :  2  cp départ :  [bpp20, bpp21, bpp22]  | cp arrivé :  [bpp30, bpp31, bpp32] 

Boucle Post :  3  cp départ :  [bpp30, bpp31, bpp32]  | cp arrivé :  [bpp40, bpp41, bpp42] 

Dernier Post : cp départ :  [bpp40, bpp41, bpp42]  | cp arrivé :  [p_equiv50, p_equiv51, p_equiv52] 

Sat --> Boucle perdante pour taille_boucle =  5
Stratégie perdante
k =  1  | taille_boucle =  5
(define-fun mdp1!1423 () Int
  2)
(define-fun cvdp0!4729 () Int
  (- 7))
(define-fun mdp2!150 () Int
  2)
(define-fun bpp32!492 () Int
  0)
(define-fun cvdp1!3228 () Int
  15)
(define-fun IsOdd_d_prime10!970 () Int
  2)
(define-fun IsOdd_d_prime10!1571 () Int
  2)
(define-fun kt00 () Int
  0)
(define-fun bps30!479 () Int
  (- 1))
(define-fun s_equiv51!454 () Int
  (- 1))
(define-fun bpp22!495 () Int
  0)
(define-fun bpp02!501 () Int
  0)
(define-fun mdp1!1573 () Int
  2)
(define-fun bpp30!494 () Int
  4)
(define-fun cvdp1!4878 () Int
  4)
(define-fun md2!1425 () Int
  2)
(define-fun mdp2!522 () Int
  4)
(define-fun mdp0!302 () Int
  1)
(define-fun IsOdd_d_prime10!299 () Int
  2)
(define-fun bpt02!471 () Int
  1)
(define-fun kt02 () Int
  0)
(define-fun p1 () Int
  2)
(define-fun cvdp0!679 () Int
  16)
(define-fun bpp10!500 () Int
  4)
(define-fun cvdp1!1578 () Int
  1)
(define-fun bpp31!493 () Int
  2)
(define-fun cvdp1!156 () Int
  4)
(define-fun mdp0!824 () Int
  2)
(define-fun s0 () Int
  (- 1))
(define-fun IsOdd_d_prime10!5021 () Int
  2)
(define-fun cvdp1!306 () Int
  (- 41))
(define-fun bpp00!503 () Int
  4)
(define-fun prot1!520 () Int
  0)
(define-fun cvdp0!829 () Int
  2)
(define-fun bps02!486 () Int
  0)
(define-fun bpt32!462 () Int
  0)
(define-fun cvdp0!1429 () Int
  2)
(define-fun bpt10!470 () Int
  0)
(define-fun prot0!521 () Int
  2)
(define-fun bpt31!463 () Int
  1)
(define-fun cvdp1!4578 () Int
  5)
(define-fun md0!827 () Int
  2)
(define-fun srot1!517 () Int
  0)
(define-fun bpp12!498 () Int
  0)
(define-fun mdp1!4873 () Int
  2)
(define-fun bpt01!472 () Int
  1)
(define-fun p_equiv50!458 () Int
  4)
(define-fun md0!1427 () Int
  2)
(define-fun mdp2!4572 () Int
  2)
(define-fun mdp2!1422 () Int
  2)
(define-fun p0 () Int
  4)
(define-fun cvdp1!3528 () Int
  (- 10))
(define-fun bpt40!461 () Int
  0)
(define-fun ks02 () Int
  (- 1))
(define-fun md0!155 () Int
  2)
(define-fun cvdp0!1579 () Int
  3)
(define-fun bpp21!496 () Int
  2)
(define-fun bpt21!466 () Int
  0)
(define-fun bps10!485 () Int
  4)
(define-fun bps41!475 () Int
  (- 1))
(define-fun t_equiv52!450 () Int
  1)
(define-fun md0!527 () Int
  4)
(define-fun cvdp0!3529 () Int
  (- 5))
(define-fun md0!4577 () Int
  (- 2))
(define-fun bpt12!468 () Int
  0)
(define-fun bpt22!465 () Int
  0)
(define-fun md1!304 () Int
  (- 4))
(define-fun p_equiv51!457 () Int
  2)
(define-fun bpp41!490 () Int
  2)
(define-fun mdp0!4574 () Int
  (- 1))
(define-fun cvdp1!4728 () Int
  28)
(define-fun mdp0!4874 () Int
  2)
(define-fun mdp2!4872 () Int
  2)
(define-fun mdp0!674 () Int
  (- 1))
(define-fun trot0!515 () Int
  0)
(define-fun trot2!513 () Int
  0)
(define-fun md1!154 () Int
  2)
(define-fun bpp42!489 () Int
  0)
(define-fun md0!1727 () Int
  9)
(define-fun trot1!514 () Int
  1)
(define-fun bps42!474 () Int
  (- 1))
(define-fun mdp0!524 () Int
  1)
(define-fun md0!305 () Int
  24)
(define-fun mdp1!151 () Int
  2)
(define-fun ks00 () Int
  (- 1))
(define-fun md1!526 () Int
  3)
(define-fun bpt42!459 () Int
  0)
(define-fun md2!4875 () Int
  2)
(define-fun md2!4725 () Int
  (- 6))
(define-fun cvdp0!157 () Int
  2)
(define-fun cvdp0!1729 () Int
  (- 8))
(define-fun IsOdd_d_prime10!298 () Int
  2)
(define-fun bps20!482 () Int
  (- 1))
(define-fun t0 () Int
  0)
(define-fun s2 () Int
  (- 1))
(define-fun p2 () Int
  0)
(define-fun cvdp0!4579 () Int
  1)
(define-fun cvdp1!6 () Int
  (- 1))
(define-fun md1!826 () Int
  2)
(define-fun md2!1725 () Int
  8)
(define-fun IsOdd_d_prime10!5020 () Int
  2)
(define-fun t2 () Int
  0)
(define-fun mdp2!0 () Int
  4)
(define-fun md0!4727 () Int
  (- 8))
(define-fun bpt11!469 () Int
  0)
(define-fun mdp0!1724 () Int
  8)
(define-fun cvdp1!1728 () Int
  2)
(define-fun bpt41!460 () Int
  0)
(define-fun cvdp0!307 () Int
  23)
(define-fun bps22!480 () Int
  0)
(define-fun bps31!478 () Int
  (- 1))
(define-fun bpp01!502 () Int
  2)
(define-fun bps00!488 () Int
  (- 1))
(define-fun kp00 () Int
  4)
(define-fun mdp0!152 () Int
  2)
(define-fun kp01 () Int
  2)
(define-fun mdp0!1424 () Int
  2)
(define-fun md1!4876 () Int
  2)
(define-fun IsOdd_d_prime10!1570 () Int
  2)
(define-fun mdp1!673 () Int
  4)
(define-fun cvdp1!678 () Int
  (- 47))
(define-fun IsOdd_d_prime10!971 () Int
  2)
(define-fun cvdp0!7 () Int
  (- 31))
(define-fun prot2!519 () Int
  4)
(define-fun cvdp1!528 () Int
  0)
(define-fun bps01!487 () Int
  2)
(define-fun t_equiv50!452 () Int
  0)
(define-fun bps12!483 () Int
  0)
(define-fun mdp0!2 () Int
  (- 2))
(define-fun kp02 () Int
  0)
(define-fun t_equiv51!451 () Int
  0)
(define-fun p_equiv52!456 () Int
  0)
(define-fun mdp1!301 () Int
  (- 3))
(define-fun bpt30!464 () Int
  1)
(define-fun md2!4575 () Int
  1)
(define-fun bpp11!499 () Int
  2)
(define-fun mdp1!823 () Int
  2)
(define-fun md0!1577 () Int
  3)
(define-fun md0!4877 () Int
  2)
(define-fun t1 () Int
  0)
(define-fun md0!677 () Int
  (- 2))
(define-fun mdp2!672 () Int
  2)
(define-fun bpp20!497 () Int
  4)
(define-fun cvdp0!4879 () Int
  2)
(define-fun md1!676 () Int
  5)
(define-fun s_equiv52!453 () Int
  0)
(define-fun ks01 () Int
  2)
(define-fun mdp1!1 () Int
  (- 1))
(define-fun md2!153 () Int
  2)
(define-fun srot0!518 () Int
  (- 1))
(define-fun cvdp1!828 () Int
  4)
(define-fun kt01 () Int
  1)
(define-fun bps11!484 () Int
  2)
(define-fun mdp1!1723 () Int
  7)
(define-fun md2!825 () Int
  2)
(define-fun cvdp1!1428 () Int
  4)
(define-fun bps32!477 () Int
  0)
(define-fun cvdp0!3229 () Int
  19)
(define-fun bpp40!491 () Int
  4)
(define-fun s1 () Int
  (- 1))
(define-fun bps21!481 () Int
  2)
(define-fun s_equiv50!455 () Int
  (- 1))
(define-fun bpt00!473 () Int
  0)
(define-fun srot2!516 () Int
  (- 1))
(define-fun cvdp0!529 () Int
  (- 1))
(define-fun bpt20!467 () Int
  1)
(define-fun bps40!476 () Int
  (- 1))
(define-fun md1!1426 () Int
  2)
(define-fun mdp2!822 () Int
  2)
python3 algov5.py 6 3
	Real time elapsed : 3:09:46

