taille : 10 | nb robot : 2
Init + phiUltimate
taille_anneau =  10
nb_robots =  2
taille_boucle_max =  3240
boucle pour k =  3
Post Init
Post 1
Post 2
Construction BouclePerdante, len(pk) =  3
DEBUT OU
Post de  [kp20, kp21]  à  [p0, p1]
On ne cherche pas de boucle de taille :  2
On ne cherche pas de boucle de taille :  1
FIN OU
Stratégie perdante
k =  3
(define-fun md0!137 () Int
  8)
(define-fun ks00 () Int
  (- 1))
(define-fun kt11 () Int
  0)
(define-fun prot0!413 () Int
  7)
(define-fun kt00 () Int
  0)
(define-fun p_equiInit0 () Int
  7)
(define-fun kp10 () Int
  7)
(define-fun t_equiInit0 () Int
  0)
(define-fun md1!69 () Int
  8)
(define-fun kt20 () Int
  0)
(define-fun prot1!412 () Int
  5)
(define-fun t0 () Int
  0)
(define-fun cvdp0!205 () Int
  10)
(define-fun ks10 () Int
  7)
(define-fun cvdp0!272 () Int
  9)
(define-fun srot0!411 () Int
  (- 1))
(define-fun trot1!408 () Int
  0)
(define-fun kp20 () Int
  7)
(define-fun ks20 () Int
  7)
(define-fun t1 () Int
  0)
(define-fun p0 () Int
  7)
(define-fun ks11 () Int
  5)
(define-fun md1!136 () Int
  2)
(define-fun cvdp0!71 () Int
  2)
(define-fun md0!70 () Int
  2)
(define-fun mdp0!68 () Int
  8)
(define-fun s_equiInit0 () Int
  (- 1))
(define-fun p1 () Int
  5)
(define-fun p_equiInit1 () Int
  5)
(define-fun ks01 () Int
  5)
(define-fun cvdp0!138 () Int
  8)
(define-fun kt21 () Int
  1)
(define-fun mdp1!134 () Int
  8)
(define-fun kt01 () Int
  1)
(define-fun mdp0!135 () Int
  2)
(define-fun s0 () Int
  (- 1))
(define-fun ks21 () Int
  (- 1))
(define-fun s_equiInit1 () Int
  (- 1))
(define-fun kp11 () Int
  5)
(define-fun t_equiInit1 () Int
  0)
(define-fun s1 () Int
  (- 1))
(define-fun kp21 () Int
  5)
(define-fun mdp1!67 () Int
  2)
(define-fun srot1!410 () Int
  (- 1))
(define-fun kt10 () Int
  0)
(define-fun kp00 () Int
  7)
(define-fun kp01 () Int
  5)
(define-fun trot0!409 () Int
  0)
python3 algov7.py 10 2
	Real time elapsed : 0:04.31

